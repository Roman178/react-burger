{"version":3,"sources":["components/app-header/app-header.module.css","services/hooks/index.ts","components/app-header/app-header.tsx","constants/constants.ts","services/constants/index.ts","api/api.js","services/actions/ingredients.ts","hooks/useModal.ts","components/ingredient-details/ingredient-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingredient-card/ingredient-card.tsx","components/ingredients-block/ingredients-block.tsx","components/burger-ingredients/burger-ingredients.tsx","images/order-success.png","components/spinner/spinner.tsx","components/order-details/order-details.tsx","services/actions/orders.ts","components/added-burger-ingredient/added-burger-ingredient.tsx","components/burger-constructor/burger-constructor.tsx","services/actions/counter.ts","components/app/app.tsx","services/reducers/ingredients.ts","services/reducers/burgerIngredients.ts","services/reducers/order.ts","services/reducers/currentIngredient.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/ingredient-details/ingredient-details.module.css","components/ingredient-card/ingredient-card.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal/modal.module.css","components/order-details/order-details.module.css","components/app/app.module.css","components/modal-overlay/modal-overlay.module.css","components/burger-constructor/burger-constructor.module.css","components/ingredients-block/ingredients-block.module.css","components/spinner/spinner.module.css","components/added-burger-ingredient/added-burger-ingredient.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","className","css","header","nav","navList","cn","listItem","type","href","listItemLink","logoItem","BASE_URL","BUN","SAUCE","MAIN_INGREDIENT","translate","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_BUN_TO_BURGER","ADD_INGREDIENT_TO_BURGER","REMOVE_INGREDIENT_FROM_BURGER","SORT_INGREDIENTS_BURGER","REMOVE_ALL_INGREDIENTS_FROM_BURGER","SET_CURRENT_INGREDIENT","REMOVE_CURRENT_INGREDIENT","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","REMOVE_ORDER","INCREASE_INGREDIENT_COUNTER","DECREASE_INGREDIENT_COUNTER","RESET_COUNTER","checkResponse","response","ok","json","Promise","reject","createOrderApi","ingredients","fetch","method","body","JSON","stringify","headers","then","data","getIngredintsSuccessAction","items","c","useModal","useState","isOpenModal","setIsOpenModal","closeModal","useCallback","openModal","IngredientDetails","store","currentIngredient","image_large","name","calories","proteins","fat","carbohydrates","root","title","src","alt","info","nutritionalValue","ModalOverlay","modalOverlayRef","useRef","ref","onClick","e","target","current","modalRoot","document","getElementById","Modal","children","handleKeyDown","key","useEffect","addEventListener","removeEventListener","createPortal","closeIconBox","IngredientCard","ingredient","ingredientQty","burgerIngredients","quantity","find","i","id","_id","qty","dispatch","useDrag","item","dragRef","setIngredient","setCurrentIngredient","card","image","priceBox","price","ingredientName","IngredientsBlock","forwardRef","ingredientTitle","filteredIngredients","cards","map","BurgerIngredients","length","a","console","error","status","currentType","setCurrentType","bunRef","sauceRef","mainRef","refs","handleScroll","mainBlockTopCoordinate","getBoundingClientRect","top","getCoordinates","parentNode","bottom","isCurrentScrollingBlock","coordinates","ingredientType","bunCoordinates","sauceCoordinates","mainCoordinates","undefined","handleTabClick","scrollIntoView","tabs","Object","keys","value","active","ingredientsRoot","onScroll","filter","Spinner","loader","OrderDetails","orderNumber","order","currentOrder","number","loading","orderRequest","orderFailed","orderSuccessImg","orderSuccess","createOrderSuccess","AddedBurgerIngredient","index","moveIngredient","removeIngredient","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","clientOffset","getClientOffset","hoverClientY","y","drop","isDragging","opacity","drag","elemetWrapper","style","text","thumbnail","handleClose","createdAt","BurgerConstructor","selectedBun","bun","canDrop","hovered","isOver","addedIngredient","addIngredientToBurger","Date","increaseIngredientCounter","dropTargetRef","sortedIngredients","dragIngredient","update","$splice","removedCreatedAt","decreaseIngredientCounter","totalCount","reduce","sum","dropOverlayInvisible","dropOverlay","dropOverlayText","dropOverlayPlus","dropOverlayPlusHover","isLocked","elements","totalBox","totalCountWrapper","totalCountDigit","isNaN","size","suggestion","App","ingredientsFailed","ingredientsRequest","app","content","DndProvider","backend","HTML5Backend","ingredientsInitialState","burgerIngredientsInitialState","increaseCounter","increasedIngredient","decreaseCounter","decreasedIngredient","ordersInitialState","currentIngredientInitialState","rootReducer","combineReducers","state","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","ReactDOM","render"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,IAAM,wBAAwB,QAAU,4BAA4B,SAAW,6BAA6B,aAAe,iCAAiC,SAAW,+B,oGCMhNC,EAA+CC,IAC/CC,EAAc,kBAAMC,e,+CCoDlBC,EAlDO,WACpB,OACE,wBAAQC,UAAWC,IAAIC,OAAvB,SACE,qBAAKF,UAAWC,IAAIE,IAApB,SACE,qBAAIH,UAAWC,IAAIG,QAAnB,UACE,qBAAIJ,UAAWK,IAAGJ,IAAIK,SAAU,OAAQ,QAAxC,UACE,cAAC,aAAD,CAAYC,KAAK,YACjB,mBACEC,KAAK,IACLR,UAAWK,IACTJ,IAAIQ,aACJ,oCAJJ,mFAUF,qBAAIT,UAAWK,IAAGJ,IAAIK,SAAU,OAAQ,QAAxC,UACE,cAAC,WAAD,CAAUC,KAAK,cACf,mBACEC,KAAK,IACLR,UAAWK,IACTJ,IAAIQ,aACJ,wDAJJ,0FAUF,oBAAIT,UAAWK,IAAGJ,IAAIK,SAAUL,IAAIS,UAApC,SACE,cAAC,OAAD,MAEF,qBAAIV,UAAWK,IAAGJ,IAAIK,SAAU,OAAQ,QAAxC,UACE,cAAC,cAAD,CAAaC,KAAK,cAClB,mBACEC,KAAK,IACLR,UAAWK,IACTJ,IAAIQ,aACJ,wDAJJ,wG,iCC5CNE,EAAmB,wCAEnBC,EAAc,MACdC,EAAgB,QAChBC,EAA0B,OAE1BC,GAAS,mBACZH,EAAM,kCADM,cAEZC,EAAQ,kCAFI,cAGZC,EAAkB,8CAHN,G,yBCNFE,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAyB,yBACzBC,EAAoB,oBACpBC,EAA2B,2BAC3BC,EAAgC,gCAChCC,EAA0B,0BAC1BC,EACX,qCACWC,EAAyB,yBACzBC,EAA4B,4BAE5BC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAe,eAEfC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAAgB,gBCjBvBC,EAAgB,SAACC,GACrB,OAAIA,EAASC,GAAWD,EAASE,OAC1BC,QAAQC,OAAOJ,IASXK,EAAiB,SAACC,GAC7B,OAAOC,MAAM,GAAD,OAAI9B,EAAJ,WAAuB,CACjC+B,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAGjBC,KAAKd,GACLc,MAAK,SAACC,GAAD,OAAUA,MC8CPC,EAA6B,SACxCC,GADwC,MAEP,CACjC3C,KAAM4C,EACND,U,SCtEIE,EAAW,WACf,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,MAAO,CAAED,cAAaE,WARHC,uBAAY,WAC7BF,GAAe,KACd,IAM+BG,UAJhBD,uBAAY,WAC5BF,GAAe,KACd,M,iBC4CUI,EAjDe,WAC5B,MACEhE,GAAY,SAACiE,GAAD,OAAWA,EAAMC,qBADvBC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,SAAUC,EAA/C,EAA+CA,IAAKC,EAApD,EAAoDA,cAGpD,OACE,sBAAKnE,UAAWC,IAAImE,KAApB,UACE,mBAAGpE,UAAWK,IAAGJ,IAAIoE,MAAO,6BAA5B,qHAGA,qBAAKrE,UAAU,OAAOsE,IAAKR,EAAaS,IAAKR,IAC7C,mBAAG/D,UAAU,kCAAb,SAAgD+D,IAChD,sBAAK/D,UAAWC,IAAIuE,KAApB,UACE,sBAAKxE,UAAWC,IAAIwE,iBAApB,UACE,mBAAGzE,UAAU,uDAAb,wFAGA,mBAAGA,UAAU,kDAAb,SACGgE,OAGL,sBAAKhE,UAAWC,IAAIwE,iBAApB,UACE,mBAAGzE,UAAU,uDAAb,oDAGA,mBAAGA,UAAU,kDAAb,SACGiE,OAGL,sBAAKjE,UAAWC,IAAIwE,iBAApB,UACE,mBAAGzE,UAAU,uDAAb,8CAGA,mBAAGA,UAAU,kDAAb,SACGkE,OAGL,sBAAKlE,UAAWC,IAAIwE,iBAApB,UACE,mBAAGzE,UAAU,uDAAb,sEAGA,mBAAGA,UAAU,kDAAb,SACGmE,c,wCC7BEO,GAX8B,SAAC,GAAoB,IAAlBlB,EAAiB,EAAjBA,WACxCmB,EAAkBC,iBAAO,MAK/B,OACE,qBAAKC,IAAKF,EAAiBG,QALT,SAACC,GACfA,EAAEC,SAAWL,EAAgBM,SAASzB,KAIOxD,UAAWC,KAAImE,Q,oBCR9Dc,GAAYC,SAASC,eAAe,gBAiC3BC,GA3BgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAU9B,EAAiB,EAAjBA,WACpC+B,EAAgB9B,uBACpB,SAACsB,GACe,WAAVA,EAAES,KAAkBhC,MAE1B,CAACA,IAQH,OALAiC,qBAAU,WAER,OADAN,SAASO,iBAAiB,UAAWH,GAC9B,kBAAMJ,SAASQ,oBAAoB,UAAWJ,MACpD,CAACA,IAEGK,uBACL,qCACE,cAAC,GAAD,CAAcpC,WAAYA,IAC1B,sBAAKxD,UAAWC,KAAImE,KAApB,UACE,qBAAKU,QAAStB,EAAYxD,UAAWC,KAAI4F,aAAzC,SACE,cAAC,YAAD,CAAWtF,KAAK,cAEjB+E,QAGLJ,KCyCWY,GAzDkC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClD,EAA+C3C,IAAvCE,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,WAAYE,EAAjC,EAAiCA,UAC3BsC,EAAgBrG,GACpB,SAACiE,GAAD,uBACEA,EAAMqC,kBAAkBC,SAASC,MAC/B,SAACC,GAAD,OACEA,EAAEC,KAAON,EAAWO,cAH1B,aACE,EAGGC,OAEDC,EAAW3G,IAEjB,EAAoB4G,YAAQ,CAC1BlG,KAAM,aACNmG,KAAMX,IAFCY,EAAT,oBAKMC,EAAgB,WACpBJ,EL0EgC,SAClCT,GADkC,MAEP,CAC3BxF,KAAM4C,EACNU,kBAAmBkC,GK9ERc,CAAqBd,IAC9BrC,KAQF,OACE,qCACGJ,GACC,cAAC,GAAD,CAAOE,WARkB,WAC7BgD,EL4EoE,CACtEjG,KAAM4C,IK5EJK,KAMI,SACE,cAAC,EAAD,MAIJ,qBAAIqB,IAAK8B,EAAS3G,UAAWC,KAAI6G,KAAMhC,QAAS,kBAAM8B,KAAtD,UACGZ,GACC,sBACEhG,UAAWK,IAAGJ,KAAIiG,SAAU,sCAD9B,SAGGF,IAGL,qBAAK1B,IAAKyB,EAAWgB,MAAOxC,IAAKwB,EAAWhC,OAC5C,sBAAK/D,UAAWC,KAAI+G,SAApB,UACE,sBAAMhH,UAAU,qCAAhB,SACG+F,EAAWkB,QAEd,cAAC,eAAD,CAAc1G,KAAK,eAErB,sBAAMP,UAAWK,IAAGJ,KAAIiH,eAAgB,+BAAxC,SACGnB,EAAWhC,c,oBC1CPoD,GAjBUC,sBACvB,WAA2CvC,GAAS,IAAjDwC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,oBAClB,OACE,sBAAKtH,UAAU,QAAf,UACE,oBAAIA,UAAU,kCAAkC6E,IAAKA,EAArD,SACGwC,IAEH,oBAAIrH,UAAWC,KAAIsH,MAAnB,SACGD,EAAoBE,KAAI,SAACpB,GAAD,OACvB,cAAC,GAAD,CAA4BL,WAAYK,GAAnBA,EAAEE,gBCiGpBmB,GA9Fe,WAAO,IAAD,EAC5BjB,EAAW3G,IACX2C,EAAc7C,GAAY,SAACiE,GAAD,OAAWA,EAAMpB,YAAYU,SAE7DuC,qBAAU,WACmB,IAAvBjD,EAAYkF,QAAclB,EP+FhC,uCAAO,WAAgBA,GAAhB,eAAAmB,EAAA,6DACLnB,EA3D0E,CAC5EjG,KAAM4C,IAyDC,kBDlHAV,MAAM,GAAD,OAAI9B,EAAJ,iBACToC,KAAKd,GACLc,MAAK,qBAAGC,QCgHJ,OAGGE,EAHH,OAIHsD,EAASvD,EAA2BC,IAJjC,gDAMHsD,EArDsE,CAC1EjG,KAAM4C,IAqDFyE,QAAQC,MAAM,iCAAkC,KAAIC,QAPjD,yDAAP,yDO9FG,CAACtB,EAAUhE,IAEd,MAAsCa,mBAASzC,GAA/C,mBAAOmH,EAAP,KAAoBC,EAApB,KACMC,EAASrD,iBAA2B,MACpCsD,EAAWtD,iBAA2B,MACtCuD,EAAUvD,iBAA2B,MACrCwD,GAAI,6BACJxH,EADI,OACOqH,GADP,wBAEJpH,EAFI,OAESqH,GAFT,wBAGJpH,EAHI,OAGmBqH,GAHnB,GAMJE,EAAe5E,uBACnB,SAACsB,GACC,IAAMuD,EAAyBvD,EAAEC,OAAOuD,wBAAwBC,IAE1DC,EAAiB,SAAC5D,GACtB,MAAO,CACL2D,IAAK3D,EAAII,QAAQyD,WAAWH,wBAAwBC,IACpDG,OAAQ9D,EAAII,QAAQyD,WAAWH,wBAAwBI,SAIrDC,EAA0B,SAC9BC,EAIAC,GAEA,OACED,EAAYL,KAAOF,GACnBO,EAAYF,OAASL,GACrBP,IAAgBe,GAIdC,EAAiBN,EAAeR,GAChCe,EAAmBP,EAAeP,GAClCe,EAAkBR,EAAeN,GAEvC,OAAOS,EAAwBG,EAAgBnI,GAC3CoH,EAAepH,GACfgI,EAAwBI,EAAkBnI,GAC1CmH,EAAenH,GACf+H,EAAwBK,EAAiBnI,GACzCkH,EAAelH,QACfoI,IAEN,CAACnB,IAGGoB,EAAiB,SAAC5I,GAAkB,IAAD,IACvCyH,EAAezH,GACf,UAAA6H,EAAK,GAAD,OAAI7H,EAAJ,eAAJ,mBAAoB0E,eAApB,SAA6BmE,kBAG/B,OACE,sBAAKpJ,UAAWC,IAAImE,KAApB,UACE,oBAAIpE,UAAU,uCAAd,mGACA,qBAAKA,UAAWC,IAAIoJ,KAApB,SACGC,OAAOC,KAAKxI,GAAWyG,KAAI,SAACsB,GAAD,OAC1B,cAAC,MAAD,CAEEU,MAAOV,EACPW,OAAQ1B,IAAgBe,EACxBhE,QAASqE,EAJX,SAMGpI,EAAU+H,IALNA,QASX,qBAAK9I,UAAWC,IAAIyJ,gBAAiBC,SAAUtB,EAA/C,SACGiB,OAAOC,KAAKxI,GAAWyG,KAAI,SAACsB,GAAD,OAC1B,cAAC,GAAD,CACEjE,IAAKuD,EAAK,GAAD,OAAIU,EAAJ,QAETzB,gBAAiBtG,EAAU+H,GAC3BxB,oBAAqB9E,EAAYoH,QAC/B,SAACxD,GAAD,OAAoBA,EAAE7F,OAASuI,MAH5BA,Y,oCCxGF,OAA0B,0C,wCCK1Be,GAFK,kBAAM,qBAAK7J,UAAWC,KAAI6J,OAApB,yBC0CXC,GAtCU,WACvB,IAAMC,EAAcrK,GAClB,SAACiE,GAAD,uBAAWA,EAAMqG,MAAMC,aAAaD,aAApC,aAAW,EAAgCE,UAEvCC,EAAUzK,GAAY,SAACiE,GAAD,OAAWA,EAAMqG,MAAMI,gBAC7CxC,EAAQlI,GAAY,SAACiE,GAAD,OAAWA,EAAMqG,MAAMK,eAEjD,OACE,qBAAKtK,UAAWC,KAAImE,KAApB,SACGgG,EACC,cAAC,GAAD,IACEvC,EACF,oBAAG7H,UAAU,oCAAb,UACE,cAAC,WAAD,CAAUO,KAAK,UADjB,yQAKA,qCACE,mBAAGP,UAAU,mCAAb,SAAiDgK,IAEjD,mBAAGhK,UAAU,6BAAb,iIACA,qBACEA,UAAWC,KAAIsK,gBACfjG,IAAKkG,GACLjG,IAAI,sGAEN,mBAAGvE,UAAU,mCAAb,qJAGA,mBAAGA,UAAU,kDAAb,kQCJGyK,GAAqB,SAACR,GAAD,MAAyC,CACzE1J,KAAM4C,EACN8G,U,kDC2DaS,GA1EgD,SAAC,GAKzD,IAJL3E,EAII,EAJJA,WACA4E,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,iBAGMhG,EAAMD,iBAAuB,MACnC,EAA8BkG,aAAQ,CACpCC,OAAQ,mBACRC,QAFoC,SAE5BC,GACN,MAAO,CACLC,UAAWD,EAAQE,iBAGvBC,MAPoC,SAO9B1E,EAAqCuE,GAA6B,IAAD,EACrE,GAAKpG,EAAII,QAAT,CAGA,IAAMoG,EAAY3E,EAAKiE,MACjBW,EAAaX,EACnB,GAAIU,IAAcC,EAAlB,CAGA,IAAMC,EAAiB,UAAG1G,EAAII,eAAP,aAAG,EAAasD,wBACjCiD,GACHD,EAAkB5C,OAAS4C,EAAkB/C,KAAO,EACjDiD,EAAeR,EAAQS,kBACvBC,EAAeF,EACjBA,EAAaG,EAAIL,EAAkB/C,IACnC,EACA6C,EAAYC,GAAcK,EAAeH,GAGzCH,EAAYC,GAAcK,EAAeH,IAG7CZ,EAAeS,EAAWC,GAC1B5E,EAAKiE,MAAQW,QA9BjB,mBAASJ,EAAT,KAASA,UAAaW,EAAtB,KAiCA,EAA+BpF,YAAQ,CACrClG,KAAM,mBACNmG,KAAM,WACJ,MAAO,CAAEL,GAAIN,EAAWO,IAAKqE,UAE/BK,QAAS,SAACC,GAAD,MAAc,CACrBa,WAAYb,EAAQa,iBANxB,mBASMC,EATN,KAASD,WASoB,EAAI,EAGjC,OAFAE,EAVA,MAUKH,EAAKhH,IAGR,sBAEE7E,UAAWC,KAAIgM,cACfpH,IAAKA,EACLqH,MAAO,CAAEH,WACT,kBAAiBb,EALnB,UAOE,qBAAKlL,UAAU,OAAf,SACE,cAAC,WAAD,CAAUO,KAAK,cAEjB,cAAC,qBAAD,CACE4L,KAAMpG,EAAWhC,KACjBqI,UAAWrG,EAAWgB,MACtBE,MAAOlB,EAAWkB,MAClBoF,YAAa,kBAAMxB,EAAiB9E,EAAWuG,UAAWvG,QAbvDA,EAAWhC,OCyHPwI,GApKe,WAC5B,IAAM/F,EAAW3G,IACXoG,EAAoBtG,GACxB,SAACiE,GAAD,OAAWA,EAAMqC,kBAAkB/C,SAG/BsJ,EAA2B7M,GAC/B,SAACiE,GAAD,OAAWA,EAAMqC,kBAAkBwG,OAErC,EAA+CrJ,IAAvCE,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,WAAYE,EAAjC,EAAiCA,UAEjC,EAA8CoH,aAAQ,CACpDC,OAAQ,aACRC,QAAS,SAACC,GAAD,MAAiC,CACxCyB,QAASzB,EAAQyB,UACjBC,QAAS1B,EAAQ2B,WAEnBf,KANoD,SAM/C9F,GACiB,QAApBA,EAAWxF,KACPiG,Eb6B4D,CACpEjG,KAAM4C,EACNsJ,Ia/BgC1G,IACxBS,EbiC2B,SACnCT,GADmC,MAEP,CAC5BxF,KAAM4C,EACN0J,gBAAiB9G,GapCP+G,CAAsB,6BAAK/G,GAAN,IAAkBuG,WAAY,IAAIS,SAG7DvG,ECjCmC,SACvCT,GADuC,MAEP,CAChCxF,KAAM4C,EACN0J,gBAAiB9G,GD6BJiH,CAA0BjH,OAbvC,0BAAS2G,EAAT,EAASA,QAASC,EAAlB,EAAkBA,QAAWM,EAA7B,KAoCMrC,EAAiBnH,uBACrB,SAAC4H,EAAWC,GACV,IbmBJ4B,EanBUC,EAAiBlH,EAAkBoF,GACzC7E,GbkBJ0G,EahBQE,KAAOnH,EAAmB,CACxBoH,QAAS,CACP,CAAChC,EAAW,GACZ,CAACC,EAAY,EAAG6B,MbcA,CAC5B5M,KAAM4C,EACN+J,yBaVE,CAACjH,EAAmBO,IAGhBqE,EAAmB,SACvByC,EACAvH,GAEAS,EbN+B,CACjCjG,KAAM4C,EACNmK,iBaIsCA,IACpC9G,ECvEqC,SACvCT,GADuC,MAEP,CAChCxF,KAAM4C,EACN0J,gBAAiB9G,GDmENwH,CAA0BxH,KAG/ByH,EACJvH,EAAkBwH,QAChB,SAACC,EAAazI,GAAd,OAAuCyI,EAAMzI,EAAQgC,QACrD,GAEmB,GAAV,OAAXuF,QAAW,IAAXA,OAAA,EAAAA,EAAavF,OAEf,OACE,qCACG3D,GACC,cAAC,GAAD,CAAOE,WAtDkB,WAC7BgD,EFnB4C,CAC9CjG,KAAM4C,IEmBJK,KAoDI,SACE,cAAC,GAAD,MAGJ,sBAAKxD,UAAWC,KAAImE,KAAMS,IAAKoI,EAA/B,UACE,sBACEjN,UAAWK,IAAGJ,KAAI0N,qBAAL,eACV1N,KAAI2N,YAAclB,IAFvB,UAKE,mBAAG1M,UAAWK,IAAGJ,KAAI4N,gBAAiB,8BAAtC,uKAGA,mBACE7N,UAAWK,IAAGJ,KAAI6N,gBAAL,eACV7N,KAAI8N,qBAAuBpB,IAFhC,kBAQDH,EACC,qCACE,qBAAKxM,UAAWK,IAAGJ,KAAIgM,cAAe,OAAQ,QAA9C,SACE,cAAC,qBAAD,CACE1L,KAAK,MACLyN,UAAU,EACV7B,KAAMK,EAAYzI,KAAO,8BACzBkD,MAAOuF,EAAYvF,MACnBmF,UAAWI,EAAYzF,UAG3B,qBAAK/G,UAAWC,KAAIgO,SAApB,SACGhI,EAAkBuB,KAAI,SAACzB,EAAyBK,GAA1B,OACrB,cAAC,GAAD,CACEL,WAAYA,EACZ4E,MAAOvE,EACPwE,eAAgBA,EAEhBC,iBAAkBA,GADb9E,EAAWuG,gBAKtB,qBAAKtM,UAAWK,IAAGJ,KAAIgM,cAAe,OAAQ,QAA9C,SACE,cAAC,qBAAD,CACE1L,KAAK,SACLyN,UAAU,EACV7B,KAAMK,EAAYzI,KAAO,wBACzBkD,MAAOuF,EAAYvF,MACnBmF,UAAWI,EAAYzF,UAG3B,sBAAK/G,UAAWK,IAAGJ,KAAIiO,SAAU,cAAjC,UACE,sBAAKlO,UAAWK,IAAGJ,KAAIkO,kBAAmB,SAA1C,UACE,mBACEnO,UAAWK,IACTJ,KAAImO,gBACJ,gCAHJ,UAMIC,MAAMb,IAAeA,IAEzB,cAAC,eAAD,CAAcjN,KAAK,eAErB,cAAC,SAAD,CAAQA,KAAK,UAAU+N,KAAK,SAASxJ,QAjH7B,WFnBe,IACnCtC,EEmBEgE,GFnBFhE,EEoBsB,CAChBA,YAAY,GAAD,oBACNyD,EAAkBuB,KAAI,SAACpB,GAAD,OAAoBA,EAAEE,QADtC,CAETkG,EAAYlG,OFrBpB,uCAAO,WAAgBE,GAAhB,eAAAmB,EAAA,6DACLnB,EArB0D,CAC5DjG,KAAM4C,IAmBC,kBAGyBZ,EAAeC,GAHxC,OAGGyH,EAHH,OAIHzD,EAASiE,GAAmBR,IAJzB,gDAMHzD,EAjBsD,CAC1DjG,KAAM4C,IAiBFyE,QAAQC,MAAM,8BAA+B,KAAIC,QAP9C,yDAAP,wDEyBEpE,IACA8C,EbgCsC,CACtCjG,KAAM4C,IahCNqD,ECvC8C,CAChDjG,KAAM4C,KD4IM,mGAMJ,sBAAKnD,UAAWC,KAAIsO,WAApB,UACE,mBAAGvO,UAAU,6BAAb,uKAGA,mBAAGA,UAAU,6BAAb,yG,uCE/IGwO,GAjCC,WACd,IAAM3G,EAAQlI,GAAY,SAACiE,GAAD,OAAWA,EAAMpB,YAAYiM,qBACjDrE,EAAUzK,GAAY,SAACiE,GAAD,OAAWA,EAAMpB,YAAYkM,sBAEzD,OACE,mCACE,sBAAK1O,UAAWC,KAAI0O,IAApB,UACE,cAAC,EAAD,IAECvE,EACC,cAAC,GAAD,IAEA,sBAAMpK,UAAWC,KAAI2O,QAArB,SACI/G,EAQA,oBAAG7H,UAAU,oCAAb,UACE,cAAC,WAAD,CAAUO,KAAK,UADjB,8NAPA,mCACE,eAACsO,GAAA,EAAD,CAAaC,QAASC,KAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,iB,2BClBZC,GAA6C,CACjD9L,MAAO,GACPwL,oBAAoB,EACpBD,mBAAmB,GCIfQ,GAAyD,CAC7D/L,MAAO,GACPuJ,IAAK,KACLvG,SAAU,IAGNgJ,GAAkB,SAAC,EAEvBnJ,GACI,IAFFG,EAEC,EAFDA,SAGF,IADG,EAFSuG,KAGoB,QAApB1G,EAAWxF,KAAgB,MAAO,GAC9C,IAAM4O,EAAsBjJ,EAASC,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAON,EAAWO,OAErE,MAA2B,QAApBP,EAAWxF,KAAX,uBAEE2F,EAAS0D,QAAO,SAACxD,GAAD,MAAkB,QAAXA,EAAE7F,SAF3B,CAGD,CAAE8F,GAAIN,EAAWO,IAAK/F,KAAMwF,EAAWxF,KAAMgG,IAAK,KAEpD4I,EAAmB,uBAEdjJ,EAAS0D,QAAO,SAACxD,GAAD,OAAOA,EAAEC,KAAO8I,EAAoB9I,OAFtC,8BAGZ8I,GAHY,IAGS5I,IAAK4I,EAAoB5I,IAAM,MAHxC,uBAKfL,GALe,CAKL,CAAEG,GAAIN,EAAWO,IAAK/F,KAAMwF,EAAWxF,KAAMgG,IAAK,MAGhE6I,GAAkB,SAAClJ,EAAsBH,GAC7C,IAAMsJ,EAAsBnJ,EAASC,MACnC,SAACC,GAAD,OAAkBA,EAAEC,KAAON,EAAWO,OAGxC,OAAoC,IAA7B+I,EAAqB9I,IAArB,aACCL,EAAS0D,QAAO,SAACxD,GAAD,OAAkBA,EAAEC,KAAOgJ,EAAqBhJ,OADjE,uBAGEH,EAAS0D,QAAO,SAACxD,GAAD,OAAkBA,EAAEC,KAAOgJ,EAAqBhJ,OAHlE,8BAIIgJ,GAJJ,IAIyB9I,IAAK8I,EAAqB9I,IAAM,OC1C5D+I,GAAmC,CACvCpF,aAAc,GACdG,cAAc,EACdC,aAAa,GCPTiF,GAAyD,GCAlDC,GAAcC,aAAgB,CACzCjN,YJSgC,WAG5B,IAFJkN,EAEG,uDAFKV,GACRW,EACG,uCACH,OAAQA,EAAOpP,MACb,KAAK4C,EACH,OAAO,6BAAKuM,GAAZ,IAAmBhB,oBAAoB,IAEzC,KAAKvL,EACH,OAAO,6BACFuM,GADL,IAEEhB,oBAAoB,EACpBD,mBAAmB,EACnBvL,MAAOyM,EAAOzM,QAGlB,KAAKC,EACH,OAAO,6BAAKuM,GAAZ,IAAmBhB,oBAAoB,EAAOD,mBAAmB,IAEnE,QACE,OAAOiB,II5BXzJ,kBHgDsC,WAGlC,IAFJyJ,EAEG,uDAFKT,GACRU,EACG,uCACH,OAAQA,EAAOpP,MACb,KAAK4C,EACH,OAAO,6BAAKuM,GAAZ,IAAmBjD,IAAKkD,EAAOlD,MAEjC,KAAKtJ,EACH,OAAOuM,EAAMjD,IAAN,6BACEiD,GADF,IACSxM,MAAM,GAAD,oBAAMwM,EAAMxM,OAAZ,CAAmByM,EAAO9C,oBAC3C6C,EAEN,KAAKvM,EACH,OAAO,6BACFuM,GADL,IAEExM,MAAO,aAAIwM,EAAMxM,OAAO0G,QACtB,SAAClD,GAAD,OAAUA,EAAK4F,YAAcqD,EAAOrC,sBAI1C,KAAKnK,EACH,OAAO,6BAAKuM,GAAZ,IAAmBxM,MAAOyM,EAAOzC,oBAEnC,KAAK/J,EACH,OAAO,6BAAKuM,GAAZ,IAAmBxM,MAAO,GAAIuJ,IAAK,OAErC,KAAKtJ,EACH,OAAO,6BACFuM,GADL,IAEExJ,SAAUgJ,GAAgBQ,EAAOC,EAAO9C,mBAG5C,KAAK1J,EACH,OAAO,6BACFuM,GADL,IAEExJ,SAAUkJ,GAAgBM,EAAMxJ,SAAUyJ,EAAO9C,mBAGrD,KAAK1J,EACH,OAAO,6BACFuM,GADL,IAEExJ,SAAU,KAGd,QACE,OAAOwJ,IG7FXzF,MFO0B,WAGtB,IAFJyF,EAEG,uDAFKJ,GACRK,EACG,uCACH,OAAQA,EAAOpP,MACb,KAAK4C,EACH,OAAO,6BAAKuM,GAAZ,IAAmBrF,cAAc,IAEnC,KAAKlH,EACH,OAAO,6BACFuM,GADL,IAEErF,cAAc,EACdC,aAAa,EACbJ,aAAcyF,EAAO1F,QAGzB,KAAK9G,EACH,OAAO,6BAAKuM,GAAZ,IAAmBrF,cAAc,EAAOC,aAAa,IAEvD,KAAKnH,EACH,OAAOmM,GAET,QACE,OAAOI,IE7BX7L,kBDFsC,WAGlC,IAFJ6L,EAEG,uDAFKH,GACRI,EACG,uCACH,OAAQA,EAAOpP,MACb,KAAK4C,EACH,OAAOwM,EAAO9L,kBAEhB,KAAKV,EACH,OAAOoM,GAET,QACE,OAAOG,MENPE,IAFJC,OAAOC,sCAAwCC,MAEfC,aAAgBC,OAErCrM,GAAQsM,aAAYV,GAAaI,ICT9CO,IAASC,OACP,cAAC,IAAD,CAAUxM,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFuB,SAASC,eAAe,U,mBCV1B3F,EAAOC,QAAU,CAAC,KAAO,iCAAiC,MAAQ,kCAAkC,KAAO,iCAAiC,iBAAmB,+C,mBCA/JD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,SAAW,oC,mBCAlED,EAAOC,QAAU,CAAC,KAAO,iCAAiC,gBAAkB,4CAA4C,KAAO,iCAAiC,eAAiB,2CAA2C,SAAW,uC,mBCAvOD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,8B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,gBAAkB,uCAAuC,YAAc,mCAAmC,YAAc,mCAAmC,UAAY,mC,mBCA5ND,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,mBCAnDD,EAAOC,QAAU,CAAC,KAAO,8B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,qBAAuB,iDAAiD,YAAc,wCAAwC,gBAAkB,4CAA4C,gBAAkB,4CAA4C,qBAAuB,iDAAiD,SAAW,qCAAqC,cAAgB,0CAA0C,SAAW,qCAAqC,kBAAoB,8CAA8C,gBAAkB,4CAA4C,WAAa,yC,mBCAnqBD,EAAOC,QAAU,CAAC,MAAQ,mC,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,cAAgB,kD","file":"static/js/main.f9ae8c6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"nav\":\"app-header_nav__1_idE\",\"navList\":\"app-header_navList__2loy4\",\"listItem\":\"app-header_listItem__3hdw9\",\"listItemLink\":\"app-header_listItemLink__39IKy\",\"logoItem\":\"app-header_logoItem__3QFK4\"};","import {\n  TypedUseSelectorHook,\n  useSelector as selectorHook,\n  useDispatch as dispatchHook,\n} from \"react-redux\";\nimport { AppDispatch, AppThunk, RootState } from \"../types\";\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport css from \"./app-header.module.css\";\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst AppHeader: FC = () => {\n  return (\n    <header className={css.header}>\n      <nav className={css.nav}>\n        <ul className={css.navList}>\n          <li className={cn(css.listItem, \"pl-5\", \"pr-5\")}>\n            <BurgerIcon type=\"primary\" />\n            <a\n              href=\"/\"\n              className={cn(\n                css.listItemLink,\n                \"text text_type_main-default ml-2\"\n              )}\n            >\n              Конструктор\n            </a>\n          </li>\n          <li className={cn(css.listItem, \"pl-5\", \"pr-5\")}>\n            <ListIcon type=\"secondary\" />\n            <a\n              href=\"/\"\n              className={cn(\n                css.listItemLink,\n                \"text text_type_main-default ml-2 text_color_inactive\"\n              )}\n            >\n              Лента заказов\n            </a>\n          </li>\n          <li className={cn(css.listItem, css.logoItem)}>\n            <Logo />\n          </li>\n          <li className={cn(css.listItem, \"pl-5\", \"pr-5\")}>\n            <ProfileIcon type=\"secondary\" />\n            <a\n              href=\"/\"\n              className={cn(\n                css.listItemLink,\n                \"text text_type_main-default ml-2 text_color_inactive\"\n              )}\n            >\n              Личный кабинет\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","const BASE_URL: string = \"https://norma.nomoreparties.space/api\";\n\nconst BUN: string = \"bun\";\nconst SAUCE: string = \"sauce\";\nconst MAIN_INGREDIENT: string = \"main\";\n\nconst translate = {\n  [BUN]: \"Булки\",\n  [SAUCE]: \"Соусы\",\n  [MAIN_INGREDIENT]: \"Начинки\",\n};\n\nexport { BASE_URL, BUN, SAUCE, MAIN_INGREDIENT, translate };\n","export const GET_INGREDIENTS_REQUEST = \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS = \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILED = \"GET_INGREDIENTS_FAILED\";\nexport const ADD_BUN_TO_BURGER = \"ADD_BUN_TO_BURGER\";\nexport const ADD_INGREDIENT_TO_BURGER = \"ADD_INGREDIENT_TO_BURGER\";\nexport const REMOVE_INGREDIENT_FROM_BURGER = \"REMOVE_INGREDIENT_FROM_BURGER\";\nexport const SORT_INGREDIENTS_BURGER = \"SORT_INGREDIENTS_BURGER\";\nexport const REMOVE_ALL_INGREDIENTS_FROM_BURGER =\n  \"REMOVE_ALL_INGREDIENTS_FROM_BURGER\";\nexport const SET_CURRENT_INGREDIENT = \"SET_CURRENT_INGREDIENT\";\nexport const REMOVE_CURRENT_INGREDIENT = \"REMOVE_CURRENT_INGREDIENT\";\n\nexport const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\";\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\nexport const CREATE_ORDER_FAILED = \"CREATE_ORDER_FAILED\";\nexport const REMOVE_ORDER = \"REMOVE_ORDER\";\n\nexport const INCREASE_INGREDIENT_COUNTER = \"INCREASE_INGREDIENT_COUNTER\";\nexport const DECREASE_INGREDIENT_COUNTER = \"DECREASE_INGREDIENT_COUNTER\";\nexport const RESET_COUNTER = \"RESET_COUNTER\";\n","import { BASE_URL } from \"../constants/constants\";\n\nconst checkResponse = (response) => {\n  if (response.ok) return response.json();\n  return Promise.reject(response);\n};\n\nexport const fetchIngredients = () => {\n  return fetch(`${BASE_URL}/ingredients`)\n    .then(checkResponse)\n    .then(({ data }) => data);\n};\n\nexport const createOrderApi = (ingredients) => {\n  return fetch(`${BASE_URL}/orders`, {\n    method: \"POST\",\n    body: JSON.stringify(ingredients),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(checkResponse)\n    .then((data) => data);\n};\n","import * as c from \"../constants\";\nimport { fetchIngredients } from \"../../api/api\";\nimport { IIngredient } from \"../types/data\";\nimport { AppDispatch, AppThunk } from \"../types\";\n\nexport interface IGetIngredintsRequestAction {\n  readonly type: typeof c.GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredintsSuccessAction {\n  readonly type: typeof c.GET_INGREDIENTS_SUCCESS;\n  readonly items: IIngredient[];\n}\n\nexport interface IGetIngredintsFailedAction {\n  readonly type: typeof c.GET_INGREDIENTS_FAILED;\n}\n\nexport interface IAddBunToBurger {\n  readonly type: typeof c.ADD_BUN_TO_BURGER;\n  readonly bun: IIngredient;\n}\n\nexport interface IAddIngredientToBurger {\n  readonly type: typeof c.ADD_INGREDIENT_TO_BURGER;\n  readonly addedIngredient: IIngredient;\n}\n\nexport interface IRemoveIngredientFromBurger {\n  readonly type: typeof c.REMOVE_INGREDIENT_FROM_BURGER;\n  readonly removedCreatedAt: IIngredient[\"createdAt\"];\n}\n\nexport interface ISortIngredientsBurger {\n  readonly type: typeof c.SORT_INGREDIENTS_BURGER;\n  readonly sortedIngredients: any;\n}\n\nexport interface IRemoveAllIngredientsFromBurger {\n  readonly type: typeof c.REMOVE_ALL_INGREDIENTS_FROM_BURGER;\n}\n\nexport interface ISetCurrentIngredient {\n  readonly type: typeof c.SET_CURRENT_INGREDIENT;\n  readonly currentIngredient: IIngredient;\n}\n\nexport interface IRemoveCurrentIngredient {\n  readonly type: typeof c.REMOVE_CURRENT_INGREDIENT;\n}\n\nexport type TIngredientsActions =\n  | IGetIngredintsRequestAction\n  | IGetIngredintsSuccessAction\n  | IGetIngredintsFailedAction\n  | IAddBunToBurger\n  | IAddIngredientToBurger\n  | IRemoveIngredientFromBurger\n  | ISortIngredientsBurger\n  | IRemoveAllIngredientsFromBurger\n  | ISetCurrentIngredient\n  | IRemoveCurrentIngredient;\n// | AppThunk;\n\nexport const getIngredintsRequestAction = (): IGetIngredintsRequestAction => ({\n  type: c.GET_INGREDIENTS_REQUEST,\n});\n\nexport const getIngredintsSuccessAction = (\n  items: IIngredient[]\n): IGetIngredintsSuccessAction => ({\n  type: c.GET_INGREDIENTS_SUCCESS,\n  items,\n});\n\nexport const getIngredintsFailedAction = (): IGetIngredintsFailedAction => ({\n  type: c.GET_INGREDIENTS_FAILED,\n});\n\nexport const addBunToBurger = (bun: IIngredient): IAddBunToBurger => ({\n  type: c.ADD_BUN_TO_BURGER,\n  bun,\n});\n\nexport const addIngredientToBurger = (\n  ingredient: IIngredient\n): IAddIngredientToBurger => ({\n  type: c.ADD_INGREDIENT_TO_BURGER,\n  addedIngredient: ingredient,\n});\n\nexport const removeIngredientFromBurger = (\n  createdAt: IIngredient[\"createdAt\"]\n): IRemoveIngredientFromBurger => ({\n  type: c.REMOVE_INGREDIENT_FROM_BURGER,\n  removedCreatedAt: createdAt,\n});\n\nexport const sortIngredientsBurger = (\n  sortedIngredients: any\n): ISortIngredientsBurger => ({\n  type: c.SORT_INGREDIENTS_BURGER,\n  sortedIngredients,\n});\n\nexport const removeAllIngredientsFromBurger =\n  (): IRemoveAllIngredientsFromBurger => ({\n    type: c.REMOVE_ALL_INGREDIENTS_FROM_BURGER,\n  });\n\nexport const setCurrentIngredient = (\n  ingredient: IIngredient\n): ISetCurrentIngredient => ({\n  type: c.SET_CURRENT_INGREDIENT,\n  currentIngredient: ingredient,\n});\n\nexport const removeCurrentIngredient = (): IRemoveCurrentIngredient => ({\n  type: c.REMOVE_CURRENT_INGREDIENT,\n});\n\nexport const getIngredientsThunk: AppThunk = () => {\n  return async function (dispatch: AppDispatch) {\n    dispatch(getIngredintsRequestAction());\n    try {\n      const items = await fetchIngredients();\n      dispatch(getIngredintsSuccessAction(items));\n    } catch (err: any) {\n      dispatch(getIngredintsFailedAction());\n      console.error(\"Error in getIngredients thunk \", err.status);\n    }\n  };\n};\n","import { useCallback, useState } from \"react\";\n\nconst useModal = () => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const closeModal = useCallback(() => {\n    setIsOpenModal(false);\n  }, []);\n\n  const openModal = useCallback(() => {\n    setIsOpenModal(true);\n  }, []);\n\n  return { isOpenModal, closeModal, openModal };\n};\n\nexport { useModal };\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport css from \"./ingredient-details.module.css\";\nimport { useSelector } from \"../../services/hooks\";\nimport { IIngredient } from \"../../services/types/data\";\n\nconst IngredientDetails: FC = () => {\n  const { image_large, name, calories, proteins, fat, carbohydrates } =\n    useSelector((store) => store.currentIngredient as IIngredient);\n\n  return (\n    <div className={css.root}>\n      <p className={cn(css.title, \"text text_type_main-large\")}>\n        Детали ингредиента\n      </p>\n      <img className=\"mb-4\" src={image_large} alt={name} />\n      <p className=\"text text_type_main-medium mb-8\">{name}</p>\n      <div className={css.info}>\n        <div className={css.nutritionalValue}>\n          <p className=\"text text_type_main-default text_color_inactive mb-2\">\n            Каллории, ккал\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {calories}\n          </p>\n        </div>\n        <div className={css.nutritionalValue}>\n          <p className=\"text text_type_main-default text_color_inactive mb-2\">\n            Белки, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {proteins}\n          </p>\n        </div>\n        <div className={css.nutritionalValue}>\n          <p className=\"text text_type_main-default text_color_inactive mb-2\">\n            Жиры, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {fat}\n          </p>\n        </div>\n        <div className={css.nutritionalValue}>\n          <p className=\"text text_type_main-default text_color_inactive mb-2\">\n            Углеводы, г\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {carbohydrates}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IngredientDetails;\n","import React, { useRef, FC, MouseEvent } from \"react\";\nimport css from \"./modal-overlay.module.css\";\n\ninterface IModalOverlayProps {\n  closeModal: () => void;\n}\n\nconst ModalOverlay: FC<IModalOverlayProps> = ({ closeModal }) => {\n  const modalOverlayRef = useRef(null);\n  const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n    if (e.target === modalOverlayRef.current) closeModal();\n  };\n\n  return (\n    <div ref={modalOverlayRef} onClick={handleClick} className={css.root} />\n  );\n};\n\nexport default ModalOverlay;\n","import React, { useCallback, useEffect, FC } from \"react\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { createPortal } from \"react-dom\";\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\nimport css from \"./modal.module.css\";\n\nconst modalRoot = document.getElementById(\"react-modals\") as HTMLDivElement;\n\ninterface IModalProps {\n  closeModal: () => void;\n}\n\nconst Modal: FC<IModalProps> = ({ children, closeModal }) => {\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (e.key === \"Escape\") closeModal();\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return createPortal(\n    <>\n      <ModalOverlay closeModal={closeModal} />\n      <div className={css.root}>\n        <div onClick={closeModal} className={css.closeIconBox}>\n          <CloseIcon type=\"primary\" />\n        </div>\n        {children}\n      </div>\n    </>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import React, { FC } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport { useModal } from \"../../hooks/useModal\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport cn from \"classnames\";\nimport css from \"./ingredient-card.module.css\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../modal/modal\";\nimport {\n  removeCurrentIngredient,\n  setCurrentIngredient,\n} from \"../../services/actions/ingredients\";\nimport { IIngredient } from \"../../services/types/data\";\n\ninterface IIngredientCardProps {\n  ingredient: IIngredient;\n}\n\nconst IngredientCard: FC<IIngredientCardProps> = ({ ingredient }) => {\n  const { isOpenModal, closeModal, openModal } = useModal();\n  const ingredientQty = useSelector(\n    (store) =>\n      store.burgerIngredients.quantity.find(\n        (i: { id: string; type: string; qty: number }) =>\n          i.id === ingredient._id\n      )?.qty\n  );\n  const dispatch = useDispatch();\n\n  const [, dragRef] = useDrag({\n    type: \"ingredient\",\n    item: ingredient,\n  });\n\n  const setIngredient = () => {\n    dispatch(setCurrentIngredient(ingredient));\n    openModal();\n  };\n\n  const closeModalWithDispatch = () => {\n    dispatch(removeCurrentIngredient());\n    closeModal();\n  };\n\n  return (\n    <>\n      {isOpenModal && (\n        <Modal closeModal={closeModalWithDispatch}>\n          <IngredientDetails />\n        </Modal>\n      )}\n\n      <li ref={dragRef} className={css.card} onClick={() => setIngredient()}>\n        {ingredientQty && (\n          <span\n            className={cn(css.quantity, \"text text_type_digits-default mr-2\")}\n          >\n            {ingredientQty}\n          </span>\n        )}\n        <img src={ingredient.image} alt={ingredient.name} />\n        <div className={css.priceBox}>\n          <span className=\"text text_type_digits-default mr-2\">\n            {ingredient.price}\n          </span>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        <span className={cn(css.ingredientName, \"text text_type_main-default\")}>\n          {ingredient.name}\n        </span>\n      </li>\n    </>\n  );\n};\n\nexport default IngredientCard;\n","import React, { forwardRef } from \"react\";\nimport { IIngredient } from \"../../services/types/data\";\nimport IngredientCard from \"../ingredient-card/ingredient-card\";\nimport css from \"./ingredients-block.module.css\";\n\ninterface IIngredientsBlockProps {\n  ingredientTitle: string;\n  filteredIngredients: IIngredient[];\n}\n\nconst IngredientsBlock = forwardRef<HTMLHeadingElement, IIngredientsBlockProps>(\n  ({ ingredientTitle, filteredIngredients }, ref) => {\n    return (\n      <div className=\"pb-10\">\n        <h3 className=\"text text_type_main-medium mb-6\" ref={ref}>\n          {ingredientTitle}\n        </h3>\n        <ul className={css.cards}>\n          {filteredIngredients.map((i: IIngredient) => (\n            <IngredientCard key={i._id} ingredient={i} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n);\n\nexport default IngredientsBlock;\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  RefObject,\n  FC,\n} from \"react\";\nimport { useDispatch, useSelector } from \"../../services/hooks\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport css from \"./burger-ingredients.module.css\";\n\nimport {\n  BUN,\n  SAUCE,\n  MAIN_INGREDIENT,\n  translate,\n} from \"../../constants/constants\";\nimport { getIngredientsThunk } from \"../../services/actions/ingredients\";\nimport IngredientsBlock from \"../ingredients-block/ingredients-block\";\nimport { IIngredient } from \"../../services/types/data\";\n\nconst BurgerIngredients: FC = () => {\n  const dispatch = useDispatch();\n  const ingredients = useSelector((store) => store.ingredients.items);\n\n  useEffect(() => {\n    if (ingredients.length === 0) dispatch(getIngredientsThunk());\n  }, [dispatch, ingredients]);\n\n  const [currentType, setCurrentType] = useState(BUN);\n  const bunRef = useRef<HTMLHeadingElement>(null);\n  const sauceRef = useRef<HTMLHeadingElement>(null);\n  const mainRef = useRef<HTMLHeadingElement>(null);\n  const refs = {\n    [`${BUN}Ref`]: bunRef,\n    [`${SAUCE}Ref`]: sauceRef,\n    [`${MAIN_INGREDIENT}Ref`]: mainRef,\n  };\n\n  const handleScroll = useCallback(\n    (e) => {\n      const mainBlockTopCoordinate = e.target.getBoundingClientRect().top;\n\n      const getCoordinates = (ref: RefObject<any>) => {\n        return {\n          top: ref.current.parentNode.getBoundingClientRect().top,\n          bottom: ref.current.parentNode.getBoundingClientRect().bottom,\n        };\n      };\n\n      const isCurrentScrollingBlock = (\n        coordinates: {\n          top: DOMRectReadOnly[\"top\"];\n          bottom: DOMRectReadOnly[\"bottom\"];\n        },\n        ingredientType: string\n      ) => {\n        return (\n          coordinates.top <= mainBlockTopCoordinate &&\n          coordinates.bottom > mainBlockTopCoordinate &&\n          currentType !== ingredientType\n        );\n      };\n\n      const bunCoordinates = getCoordinates(bunRef);\n      const sauceCoordinates = getCoordinates(sauceRef);\n      const mainCoordinates = getCoordinates(mainRef);\n\n      return isCurrentScrollingBlock(bunCoordinates, BUN)\n        ? setCurrentType(BUN)\n        : isCurrentScrollingBlock(sauceCoordinates, SAUCE)\n        ? setCurrentType(SAUCE)\n        : isCurrentScrollingBlock(mainCoordinates, MAIN_INGREDIENT)\n        ? setCurrentType(MAIN_INGREDIENT)\n        : undefined;\n    },\n    [currentType]\n  );\n\n  const handleTabClick = (type: string) => {\n    setCurrentType(type);\n    refs[`${type}Ref`]?.current?.scrollIntoView();\n  };\n\n  return (\n    <div className={css.root}>\n      <h2 className=\"text text_type_main-large mt-10 mb-5\">Соберите бургер</h2>\n      <div className={css.tabs}>\n        {Object.keys(translate).map((ingredientType) => (\n          <Tab\n            key={ingredientType}\n            value={ingredientType}\n            active={currentType === ingredientType}\n            onClick={handleTabClick}\n          >\n            {translate[ingredientType]}\n          </Tab>\n        ))}\n      </div>\n      <div className={css.ingredientsRoot} onScroll={handleScroll}>\n        {Object.keys(translate).map((ingredientType) => (\n          <IngredientsBlock\n            ref={refs[`${ingredientType}Ref`]}\n            key={ingredientType}\n            ingredientTitle={translate[ingredientType]}\n            filteredIngredients={ingredients.filter(\n              (i: IIngredient) => i.type === ingredientType\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BurgerIngredients;\n","export default __webpack_public_path__ + \"static/media/order-success.f3932884.png\";","import React, { FC } from \"react\";\nimport css from \"./spinner.module.css\";\n\nconst Spinner: FC = () => <div className={css.loader}>Loading...</div>;\n\nexport default Spinner;\n","import React, { FC } from \"react\";\nimport orderSuccess from \"../../images/order-success.png\";\nimport css from \"./order-details.module.css\";\nimport { useSelector } from \"../../services/hooks\";\nimport Spinner from \"../spinner/spinner\";\nimport { InfoIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst OrderDetails: FC = () => {\n  const orderNumber = useSelector(\n    (store) => store.order.currentOrder.order?.number\n  );\n  const loading = useSelector((store) => store.order.orderRequest);\n  const error = useSelector((store) => store.order.orderFailed);\n\n  return (\n    <div className={css.root}>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <p className=\"text text_type_main-default mt-10\">\n          <InfoIcon type=\"error\" />\n          Произошла ошибка. Попробуйте сделать заказ позже.\n        </p>\n      ) : (\n        <>\n          <p className=\"text text_type_digits-large mb-8\">{orderNumber}</p>\n\n          <p className=\"text text_type_main-medium\">идентификатор заказа</p>\n          <img\n            className={css.orderSuccessImg}\n            src={orderSuccess}\n            alt=\"Заказ подтвержден\"\n          />\n          <p className=\"text text_type_main-default mb-2\">\n            Ваш заказ начали готовить\n          </p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Дождитесь готовности на орбитальной станции\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","import * as c from \"../constants\";\nimport { createOrderApi } from \"../../api/api\";\nimport { AppDispatch, AppThunk } from \"../types\";\nimport { IIngredient, IOrder } from \"../types/data\";\n\nexport interface ICreateOrderRequest {\n  readonly type: typeof c.CREATE_ORDER_REQUEST;\n}\n\nexport interface ICreateOrderSuccess {\n  readonly type: typeof c.CREATE_ORDER_SUCCESS;\n  readonly order: IOrder;\n}\n\nexport interface ICreateOrderFailed {\n  readonly type: typeof c.CREATE_ORDER_FAILED;\n}\n\nexport interface IRemoveOrder {\n  readonly type: typeof c.REMOVE_ORDER;\n}\n\nexport type TOrderActions =\n  | ICreateOrderRequest\n  | ICreateOrderSuccess\n  | ICreateOrderFailed\n  | IRemoveOrder;\n\nexport const createOrderRequest = (): ICreateOrderRequest => ({\n  type: c.CREATE_ORDER_REQUEST,\n});\n\nexport const createOrderSuccess = (order: IOrder): ICreateOrderSuccess => ({\n  type: c.CREATE_ORDER_SUCCESS,\n  order,\n});\n\nexport const createOrderFailed = (): ICreateOrderFailed => ({\n  type: c.CREATE_ORDER_FAILED,\n});\n\nexport const removeOrder = (): IRemoveOrder => ({\n  type: c.REMOVE_ORDER,\n});\n\nexport const createOrder: AppThunk = (\n  ingredients: Array<IIngredient[\"_id\"]>\n) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch(createOrderRequest());\n    try {\n      const order: IOrder = await createOrderApi(ingredients);\n      dispatch(createOrderSuccess(order));\n    } catch (err: any) {\n      dispatch(createOrderFailed());\n      console.error(\"Error in createOrder thunk \", err.status);\n    }\n  };\n};\n","import React, { useRef, FC } from \"react\";\nimport { DropTargetMonitor, useDrag, useDrop } from \"react-dnd\";\nimport {\n  ConstructorElement,\n  DragIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport css from \"./added-burger-ingredient.module.css\";\nimport { IIngredient } from \"../../services/types/data\";\n\ninterface IAddedBurgerIngredientProps {\n  ingredient: IIngredient;\n  index: number;\n  moveIngredient: (dragIndex: number, hoverIndex: number) => void;\n  removeIngredient: (\n    createdAt: number | undefined,\n    ingredient: IIngredient\n  ) => void;\n}\n\nconst AddedBurgerIngredient: FC<IAddedBurgerIngredientProps> = ({\n  ingredient,\n  index,\n  moveIngredient,\n  removeIngredient,\n}) => {\n  // sorting example from react-dnd\n  const ref = useRef<HTMLDivElement>(null);\n  const [{ handlerId }, drop] = useDrop({\n    accept: \"burgerIngredient\",\n    collect(monitor: DropTargetMonitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item: { id: string; index: number }, monitor: DropTargetMonitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset\n        ? clientOffset.y - hoverBoundingRect.top\n        : 0;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveIngredient(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n  const [{ isDragging }, drag] = useDrag({\n    type: \"burgerIngredient\",\n    item: () => {\n      return { id: ingredient._id, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  return (\n    <div\n      key={ingredient.name}\n      className={css.elemetWrapper}\n      ref={ref}\n      style={{ opacity }}\n      data-handler-id={handlerId}\n    >\n      <div className=\"mr-2\">\n        <DragIcon type=\"primary\" />\n      </div>\n      <ConstructorElement\n        text={ingredient.name}\n        thumbnail={ingredient.image}\n        price={ingredient.price}\n        handleClose={() => removeIngredient(ingredient.createdAt, ingredient)}\n      />\n    </div>\n  );\n};\n\nexport default AddedBurgerIngredient;\n","import React, { useCallback, FC } from \"react\";\nimport css from \"./burger-constructor.module.css\";\nimport {\n  ConstructorElement,\n  Button,\n  CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../modal/modal\";\nimport OrderDetails from \"../order-details/order-details\";\nimport { useModal } from \"../../hooks/useModal\";\nimport cn from \"classnames\";\nimport { useSelector, useDispatch } from \"../../services/hooks\";\nimport { createOrder as createOrderAction } from \"../../services/actions/orders\";\nimport { useDrop, DropTargetMonitor } from \"react-dnd\";\nimport update from \"immutability-helper\";\nimport AddedBurgerIngredient from \"../added-burger-ingredient/added-burger-ingredient\";\nimport { IIngredient } from \"../../services/types/data\";\nimport {\n  addBunToBurger,\n  addIngredientToBurger,\n  removeAllIngredientsFromBurger,\n  removeIngredientFromBurger,\n  sortIngredientsBurger,\n} from \"../../services/actions/ingredients\";\nimport {\n  decreaseIngredientCounter,\n  increaseIngredientCounter,\n  resetCounter,\n} from \"../../services/actions/counter\";\nimport { removeOrder } from \"../../services/actions/orders\";\n\nconst BurgerConstructor: FC = () => {\n  const dispatch = useDispatch();\n  const burgerIngredients = useSelector(\n    (store) => store.burgerIngredients.items\n  );\n\n  const selectedBun: IIngredient = useSelector(\n    (store) => store.burgerIngredients.bun!\n  );\n  const { isOpenModal, closeModal, openModal } = useModal();\n\n  const [{ canDrop, hovered }, dropTargetRef] = useDrop({\n    accept: \"ingredient\",\n    collect: (monitor: DropTargetMonitor) => ({\n      canDrop: monitor.canDrop(),\n      hovered: monitor.isOver(),\n    }),\n    drop(ingredient: IIngredient) {\n      ingredient.type === \"bun\"\n        ? dispatch(addBunToBurger(ingredient))\n        : dispatch(\n            addIngredientToBurger({ ...ingredient, createdAt: +new Date() })\n          );\n\n      dispatch(increaseIngredientCounter(ingredient));\n    },\n  });\n\n  const closeModalWithDispatch = () => {\n    dispatch(removeOrder());\n    closeModal();\n  };\n\n  const createOrder = () => {\n    dispatch(\n      createOrderAction({\n        ingredients: [\n          ...burgerIngredients.map((i: IIngredient) => i._id),\n          selectedBun._id,\n        ],\n      })\n    );\n    openModal();\n    dispatch(removeAllIngredientsFromBurger());\n    dispatch(resetCounter());\n  };\n\n  const moveIngredient = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragIngredient = burgerIngredients[dragIndex];\n      dispatch(\n        sortIngredientsBurger(\n          update(burgerIngredients, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, dragIngredient],\n            ],\n          })\n        )\n      );\n    },\n    [burgerIngredients, dispatch]\n  );\n\n  const removeIngredient = (\n    removedCreatedAt: IIngredient[\"createdAt\"],\n    ingredient: IIngredient\n  ) => {\n    dispatch(removeIngredientFromBurger(removedCreatedAt));\n    dispatch(decreaseIngredientCounter(ingredient));\n  };\n\n  const totalCount =\n    burgerIngredients.reduce(\n      (sum: number, current: IIngredient) => sum + current.price,\n      0\n    ) +\n    selectedBun?.price * 2;\n\n  return (\n    <>\n      {isOpenModal && (\n        <Modal closeModal={closeModalWithDispatch}>\n          <OrderDetails />\n        </Modal>\n      )}\n      <div className={css.root} ref={dropTargetRef}>\n        <div\n          className={cn(css.dropOverlayInvisible, {\n            [css.dropOverlay]: canDrop,\n          })}\n        >\n          <p className={cn(css.dropOverlayText, \"text text_type_main-medium\")}>\n            Добавьте ингредиент в бургер\n          </p>\n          <p\n            className={cn(css.dropOverlayPlus, {\n              [css.dropOverlayPlusHover]: hovered,\n            })}\n          >\n            +\n          </p>\n        </div>\n        {selectedBun ? (\n          <>\n            <div className={cn(css.elemetWrapper, \"mb-4\", \"pr-4\")}>\n              <ConstructorElement\n                type=\"top\"\n                isLocked={true}\n                text={selectedBun.name + \" (верх)\"}\n                price={selectedBun.price}\n                thumbnail={selectedBun.image}\n              />\n            </div>\n            <div className={css.elements}>\n              {burgerIngredients.map((ingredient: IIngredient, i: number) => (\n                <AddedBurgerIngredient\n                  ingredient={ingredient}\n                  index={i}\n                  moveIngredient={moveIngredient}\n                  key={ingredient.createdAt}\n                  removeIngredient={removeIngredient}\n                />\n              ))}\n            </div>\n            <div className={cn(css.elemetWrapper, \"mt-4\", \"pr-4\")}>\n              <ConstructorElement\n                type=\"bottom\"\n                isLocked={true}\n                text={selectedBun.name + \" (низ)\"}\n                price={selectedBun.price}\n                thumbnail={selectedBun.image}\n              />\n            </div>\n            <div className={cn(css.totalBox, \"mt-10 pr-5\")}>\n              <div className={cn(css.totalCountWrapper, \"mr-10\")}>\n                <p\n                  className={cn(\n                    css.totalCountDigit,\n                    \"text text_type_digits-medium\"\n                  )}\n                >\n                  {!isNaN(totalCount) && totalCount}\n                </p>\n                <CurrencyIcon type=\"primary\" />\n              </div>\n              <Button type=\"primary\" size=\"medium\" onClick={createOrder}>\n                Оформить заказ\n              </Button>\n            </div>\n          </>\n        ) : (\n          <div className={css.suggestion}>\n            <p className=\"text text_type_main-medium\">\n              Переносите сюда ингредиенты.\n            </p>\n            <p className=\"text text_type_main-medium\">Начните с булки.</p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default BurgerConstructor;\n","import * as c from \"../constants\";\nimport { IIngredient } from \"../types/data\";\n\nexport interface IIncreaseIngredientCounter {\n  readonly type: typeof c.INCREASE_INGREDIENT_COUNTER;\n  addedIngredient: IIngredient;\n}\n\nexport interface IDecreaseIngredientCounter {\n  readonly type: typeof c.DECREASE_INGREDIENT_COUNTER;\n  addedIngredient: IIngredient;\n}\n\nexport interface IResetCounter {\n  readonly type: typeof c.RESET_COUNTER;\n}\n\nexport type TCounterActions =\n  | IIncreaseIngredientCounter\n  | IDecreaseIngredientCounter\n  | IResetCounter;\n\nexport const increaseIngredientCounter = (\n  ingredient: IIngredient\n): IIncreaseIngredientCounter => ({\n  type: c.INCREASE_INGREDIENT_COUNTER,\n  addedIngredient: ingredient,\n});\n\nexport const decreaseIngredientCounter = (\n  ingredient: IIngredient\n): IDecreaseIngredientCounter => ({\n  type: c.DECREASE_INGREDIENT_COUNTER,\n  addedIngredient: ingredient,\n});\n\nexport const resetCounter = (): IResetCounter => ({\n  type: c.RESET_COUNTER,\n});\n","import React, { FC } from \"react\";\nimport { useSelector } from \"../../services/hooks\";\nimport AppHeader from \"../app-header/app-header\";\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\nimport css from \"./app.module.css\";\nimport { InfoIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Spinner from \"../spinner/spinner\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nconst App: FC = () => {\n  const error = useSelector((store) => store.ingredients.ingredientsFailed);\n  const loading = useSelector((store) => store.ingredients.ingredientsRequest);\n\n  return (\n    <>\n      <div className={css.app}>\n        <AppHeader />\n\n        {loading ? (\n          <Spinner />\n        ) : (\n          <main className={css.content}>\n            {!error ? (\n              <>\n                <DndProvider backend={HTML5Backend}>\n                  <BurgerIngredients />\n                  <BurgerConstructor />\n                </DndProvider>\n              </>\n            ) : (\n              <p className=\"text text_type_main-default mt-10\">\n                <InfoIcon type=\"error\" />\n                Произошла ошибка. Попробуйте зайти позже.\n              </p>\n            )}\n          </main>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import * as c from \"../constants\";\nimport { IIngredient } from \"../types/data\";\nimport { TIngredientsActions } from \"../actions/ingredients\";\n\ntype TIngredientsState = {\n  items: ReadonlyArray<IIngredient>;\n  ingredientsRequest: boolean;\n  ingredientsFailed: boolean;\n};\n\nconst ingredientsInitialState: TIngredientsState = {\n  items: [],\n  ingredientsRequest: false,\n  ingredientsFailed: false,\n};\n\nexport const ingredientsReducer = (\n  state = ingredientsInitialState,\n  action: TIngredientsActions\n) => {\n  switch (action.type) {\n    case c.GET_INGREDIENTS_REQUEST: {\n      return { ...state, ingredientsRequest: true };\n    }\n    case c.GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailed: false,\n        items: action.items,\n      };\n    }\n    case c.GET_INGREDIENTS_FAILED: {\n      return { ...state, ingredientsRequest: false, ingredientsFailed: true };\n    }\n    default:\n      return state;\n  }\n};\n","import * as c from \"../constants\";\nimport { IIngredient } from \"../types/data\";\nimport { TIngredientsActions } from \"../actions/ingredients\";\nimport { TCounterActions } from \"../actions/counter\";\n\nexport interface IQuantity {\n  id: string;\n  type: string;\n  qty: number;\n}\n\ntype TBurgerIngredientsState = {\n  items: ReadonlyArray<IIngredient>;\n  bun: null | IIngredient;\n  quantity: Array<IQuantity>;\n};\n\nconst burgerIngredientsInitialState: TBurgerIngredientsState = {\n  items: [],\n  bun: null,\n  quantity: [],\n};\n\nconst increaseCounter = (\n  { quantity, bun }: TBurgerIngredientsState,\n  ingredient: IIngredient\n) => {\n  if (!bun && ingredient.type !== \"bun\") return [];\n  const increasedIngredient = quantity.find((i) => i.id === ingredient._id);\n\n  return ingredient.type === \"bun\"\n    ? [\n        ...quantity.filter((i) => i.type !== \"bun\"),\n        { id: ingredient._id, type: ingredient.type, qty: 2 },\n      ]\n    : increasedIngredient\n    ? [\n        ...quantity.filter((i) => i.id !== increasedIngredient.id),\n        { ...increasedIngredient, qty: increasedIngredient.qty + 1 },\n      ]\n    : [...quantity, { id: ingredient._id, type: ingredient.type, qty: 1 }];\n};\n\nconst decreaseCounter = (quantity: Array<any>, ingredient: IIngredient) => {\n  const decreasedIngredient = quantity.find(\n    (i: IQuantity) => i.id === ingredient._id\n  );\n\n  return decreasedIngredient!.qty === 1\n    ? [...quantity.filter((i: IQuantity) => i.id !== decreasedIngredient!.id)]\n    : [\n        ...quantity.filter((i: IQuantity) => i.id !== decreasedIngredient!.id),\n        { ...decreasedIngredient, qty: decreasedIngredient!.qty - 1 },\n      ];\n};\n\nexport const burgerIngredientsReducer = (\n  state = burgerIngredientsInitialState,\n  action: TIngredientsActions | TCounterActions\n) => {\n  switch (action.type) {\n    case c.ADD_BUN_TO_BURGER: {\n      return { ...state, bun: action.bun };\n    }\n    case c.ADD_INGREDIENT_TO_BURGER: {\n      return state.bun\n        ? { ...state, items: [...state.items, action.addedIngredient] }\n        : state;\n    }\n    case c.REMOVE_INGREDIENT_FROM_BURGER: {\n      return {\n        ...state,\n        items: [...state.items].filter(\n          (item) => item.createdAt !== action.removedCreatedAt\n        ),\n      };\n    }\n    case c.SORT_INGREDIENTS_BURGER: {\n      return { ...state, items: action.sortedIngredients };\n    }\n    case c.REMOVE_ALL_INGREDIENTS_FROM_BURGER: {\n      return { ...state, items: [], bun: null };\n    }\n    case c.INCREASE_INGREDIENT_COUNTER: {\n      return {\n        ...state,\n        quantity: increaseCounter(state, action.addedIngredient),\n      };\n    }\n    case c.DECREASE_INGREDIENT_COUNTER: {\n      return {\n        ...state,\n        quantity: decreaseCounter(state.quantity, action.addedIngredient),\n      };\n    }\n    case c.RESET_COUNTER: {\n      return {\n        ...state,\n        quantity: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import * as c from \"../constants\";\nimport { TOrderActions } from \"../actions/orders\";\nimport { IOrder } from \"../types/data\";\n\ntype TOrdersState = {\n  currentOrder: IOrder;\n  orderRequest: boolean;\n  orderFailed: boolean;\n};\n\nconst ordersInitialState: TOrdersState = {\n  currentOrder: {},\n  orderRequest: false,\n  orderFailed: false,\n};\n\nexport const orderReducer = (\n  state = ordersInitialState,\n  action: TOrderActions\n) => {\n  switch (action.type) {\n    case c.CREATE_ORDER_REQUEST: {\n      return { ...state, orderRequest: true };\n    }\n    case c.CREATE_ORDER_SUCCESS: {\n      return {\n        ...state,\n        orderRequest: false,\n        orderFailed: false,\n        currentOrder: action.order,\n      };\n    }\n    case c.CREATE_ORDER_FAILED: {\n      return { ...state, orderRequest: false, orderFailed: true };\n    }\n    case c.REMOVE_ORDER: {\n      return ordersInitialState;\n    }\n    default:\n      return state;\n  }\n};\n","import * as c from \"../constants\";\nimport { IIngredient } from \"../types/data\";\nimport { TIngredientsActions } from \"../actions/ingredients\";\n\ntype TCurrentIngredientState = IIngredient | {};\n\nconst currentIngredientInitialState: TCurrentIngredientState = {};\n\nexport const currentIngredientReducer = (\n  state = currentIngredientInitialState,\n  action: TIngredientsActions\n) => {\n  switch (action.type) {\n    case c.SET_CURRENT_INGREDIENT: {\n      return action.currentIngredient;\n    }\n    case c.REMOVE_CURRENT_INGREDIENT: {\n      return currentIngredientInitialState;\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { ingredientsReducer } from \"./ingredients\";\nimport { burgerIngredientsReducer } from \"./burgerIngredients\";\nimport { orderReducer } from \"./order\";\nimport { currentIngredientReducer } from \"./currentIngredient\";\n\nexport const rootReducer = combineReducers({\n  ingredients: ingredientsReducer,\n  burgerIngredients: burgerIngredientsReducer,\n  order: orderReducer,\n  currentIngredient: currentIngredientReducer,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers\";\nimport { compose } from \"redux\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nexport const composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enhancer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./services/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ingredient-details_root__2LuS_\",\"title\":\"ingredient-details_title__2_5MB\",\"info\":\"ingredient-details_info__14J0F\",\"nutritionalValue\":\"ingredient-details_nutritionalValue__39b2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient-card_card__1cRZ7\",\"quantity\":\"ingredient-card_quantity__37EJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"burger-ingredients_root__BqyBa\",\"ingredientsRoot\":\"burger-ingredients_ingredientsRoot__Mm5dV\",\"tabs\":\"burger-ingredients_tabs__1yNyE\",\"ingredientName\":\"burger-ingredients_ingredientName__2NN53\",\"priceBox\":\"burger-ingredients_priceBox__3fetX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"modal_root__QSEqe\",\"closeIconBox\":\"modal_closeIconBox__17w0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"order-details_root__2yQn2\",\"orderSuccessImg\":\"order-details_orderSuccessImg__3uHbU\",\"orderIdText\":\"order-details_orderIdText__2MKi3\",\"orderStatus\":\"order-details_orderStatus__3tYLQ\",\"orderNote\":\"order-details_orderNote__3oaXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"content\":\"app_content__1uD0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"modal-overlay_root__3Bmoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"burger-constructor_root__1kSmR\",\"dropOverlayInvisible\":\"burger-constructor_dropOverlayInvisible__3UQ99\",\"dropOverlay\":\"burger-constructor_dropOverlay__btr0X\",\"dropOverlayText\":\"burger-constructor_dropOverlayText__2P6Mo\",\"dropOverlayPlus\":\"burger-constructor_dropOverlayPlus__354NF\",\"dropOverlayPlusHover\":\"burger-constructor_dropOverlayPlusHover__rqfxj\",\"elements\":\"burger-constructor_elements__1mnPz\",\"elemetWrapper\":\"burger-constructor_elemetWrapper__3IS6P\",\"totalBox\":\"burger-constructor_totalBox__1xa_w\",\"totalCountWrapper\":\"burger-constructor_totalCountWrapper__2qF_m\",\"totalCountDigit\":\"burger-constructor_totalCountDigit__ufvq0\",\"suggestion\":\"burger-constructor_suggestion__BKRfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"ingredients-block_cards__2h5E0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__3zq4M\",\"load3\":\"spinner_load3__j5x9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elemetWrapper\":\"added-burger-ingredient_elemetWrapper__2E9ZD\"};"],"sourceRoot":""}